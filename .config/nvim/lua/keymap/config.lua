-- local function check_back_space()
--     local col = vim.fn.col('.') - 1
--     if col == 0 or vim.fn.getline('.'):sub(col, col):match('%s') then
--         return true
--     else
--         return false
--     end
-- end

-- _G.tab_complete = function(fallback)
--   if check_back_space() then
--     vim.api.nvim_feedkeys(vim.api.nvim_replace_termcodes('<Tab>', true, true, true), 'n', true)
--   else
--     fallback()
--   end
-- end

-- _G.s_tab_complete = function()
--   if vim.fn.pumvisible() == 1 then
--     return t "<C-p>"
--   else
--     return t "<S-Tab>"
--   end
-- end

-- _G.enhance_jk_move = function(key)
--   if packer_plugins['accelerated-jk'] and not packer_plugins['accelerated-jk'].loaded then
--     vim.cmd [[packadd accelerated-jk]]
--   end
--   local map = key == 'j' and '<Plug>(accelerated_jk_gj)' or '<Plug>(accelerated_jk_gk)'
--   return t(map)
-- end

-- _G.enhance_ft_move = function(key)
--   if not packer_plugins['vim-eft'].loaded then
--     vim.cmd [[packadd vim-eft]]
--   end
--   local map = {
--     f = '<Plug>(eft-f)',
--     F = '<Plug>(eft-F)',
--     [';'] = '<Plug>(eft-repeat)'
--   }
--   return t(map[key])
-- end

-- _G.enhance_nice_block = function (key)
--   if not packer_plugins['vim-niceblock'].loaded then
--     vim.cmd [[packadd vim-niceblock]]
--   end
--   local map = {
--     I = '<Plug>(niceblock-I)',
--     ['gI'] = '<Plug>(niceblock-gI)',
--     A = '<Plug>(niceblock-A)'
--   }
--   return t(map[key])
-- end
